version: "3.9"

services:
  db:
    image: postgres
    container_name: salesapp_db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - djangonetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20 
  backend:
    build: ./salesbackend
    container_name: salesapp_backend
    environment:
      CHOKIDAR_USEPOLLING: "true"
    env_file: ./salesbackend/.env
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./salesbackend:/code
    ports:
      - "8000:8000"
    networks:
      - djangonetwork 
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ./salesfrontend
    container_name: salesapp_frontend
    # environment:
    #   CHOKIDAR_USEPOLLING: "true"
    env_file: ./salesfrontend/.env
    command: npm run start
    # volumes:
    #   - ./salesfrontend:/app
    ports:
      - "3000:3000"
    networks:
      - djangonetwork 
    depends_on:
      - backend

networks:
    djangonetwork:
        driver: bridge
